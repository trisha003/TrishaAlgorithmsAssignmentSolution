package greatlearning;

import java.util.Random;
import java.util.Scanner;

public class Solution {
	public static void main(String args[])
	{
		int i,n;
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter no of companies");
		n=sc.nextInt(); 
		double a[] = new double[n];
		boolean ans[] = new boolean[n];
		for(i=0;i<n;i++) {
			System.out.println("Enter share price of company" + i+ ":");
			double s = sc.nextDouble();
			System.out.println("Transition in market:");
			a[i]=s;
		    //System.out.println(s);
	        System.out.println("Enter TRUE for a hike and FALSE for depreciation");
			//boolean s1 = sc.nextBoolean();
			boolean s1=sc.nextBoolean();
			System.out.println(s1);
			ans[i]= s1;
			
	}

         // n1 represents the number of times user wants switch case to execute
		int n1=sc.nextInt();
		int p=0;
		while(p<n1) {
		System.out.println("Enter choice");
		int c = sc.nextInt();
	
		
		switch(c)
		{
		
			case 1:System.out.println("Display the stock price of companies in ascending order");
					AscendingOrder(a);
					for(double x:a) {
						System.out.println(x);
					}
			break;
			
			case 2:System.out.println("Display the stock price of companies in descending order");
			       DescendingOrder(a);
			       for(double x:a) {
			    	   System.out.println(x);
			       }
			break;
			
			case 3:System.out.println("Display the total no of companies for which stock prices rose today");
			
					System.out.println(IncreasedStockedPrice(ans));
					break;
			
			case 4:System.out.println("Display the total number of companies for which the stock prices declined today");
			       
			       System.out.println(DecreasedStockPrice(ans));
			       break;
			
			case 5:System.out.println("Search a specific stock price ");
				   System.out.println("Enter price of stock ");
				   int k=sc.nextInt();
			       System.out.println(SearchStockPrice(a,k));
			break;
			
			case 6: 
			default: System.out.println("0"+"\n"+"Exited Successfully");
			break;
		}
		
	   
	    
	    ++p;
		}
		
	}

	private static String SearchStockPrice(double[] a,double f) {
		// TODO Auto-generated method stub
		int i,flag=0;
	
		for(i=0;i<a.length;i++)
		{
			if(a[i]==f) {
				flag=1;
				break;
			}
		}
		if(flag==1) {
			return "Present";
		}
		else {
			return "Value not found";
		}
		
	}

	private static int DecreasedStockPrice(boolean[] ans) {
		// TODO Auto-generated method stub
		int i,c=0;
		for(i=0;i<ans.length;i++)
		{
			if(ans[i]==false) {
				c++;
			}
		}
		
		
		
		
		
		return c;
	}

	private static int IncreasedStockedPrice(boolean[] ans) {
		
		// TODO Auto-generated method stub
		int i,c=0;
		for(i=0;i<ans.length;i++)
		{
			if(ans[i]==true) {
				c++;
			}
		}
		
		
		
		
		
		return c;
		
	}

	private static double[] DescendingOrder(double[] a) {
		// TODO Auto-generated method stub
		int i,j;
		for(i=0;i<a.length-1;i++)
		{
			for(j=0;j<a.length-i-1;j++)
			{
				if(a[j]<a[j+1]) {
				double temp=a[j];
				a[j]=a[j+1];
				a[j+1]=temp;
			}
			}
		}
		return a;
		
	}

	private static double[] AscendingOrder(double[] a) {
		// TODO Auto-generated method stub
		int i,j;
		for(i=0;i<a.length-1;i++)
		{
			for(j=0;j<a.length-i-1;j++)
			{
				if(a[j]>a[j+1]) {
				double temp=a[j];
				a[j]=a[j+1];
				a[j+1]=temp;
			}
			}
		}
		return a;
	
		
	}
	
}
